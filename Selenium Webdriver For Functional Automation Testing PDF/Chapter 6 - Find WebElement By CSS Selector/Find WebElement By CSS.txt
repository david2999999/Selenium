Find WebElement By CSS Selector
    - Using CSS selector is a robust method for finding WebElements
    - This locator type is very similar to the XPath locator type
    - CSS Selectors can start with many symbols, each symbol represents different kind of attributes
        - # (pound, number, or hash tag sign) indicates the ID attribute
        - . (dot) is a symbol that represents the class attribute
            - Syntax: By.cssSelector(".Automation"), this will retrieve all elements with the class name of 'Automation'
            - You can also identify an element using class if the tag type is 'Test' and class name is 'Automation'
                - Syntax: (By.cssSelector("Test.Automation")), this will retrieve only elements with the tag name and the class name
    - The difference between the CSS selector and relative XPath is the two forward slashes and the "@" symbol before attribute name
        - CSS Selector syntax = TagName[AttributeName=’AttributeValue’]
        - Relative XPath syntax = //TagName[@AttributeName=’AttributeValue’]

Working with Dynamic WebElements
    - The WebElement can be found although the value changes at runtime or after a page reloads
    - CSS selector has three pattern matching symbols (^,$,*) that assist with finding dynamic WebElements
        - Syntax: TagName[AttributeName Symbol=’AttributeValue’]
    - Assume the value for an ID attribute changes from
        - "Hello123" -> "Hello456"
            - We can use the ^ (caret) to find WebElements if the value starts with a constant string value
            - driver.findElement(By.cssSelector("*[id ^=’Hello’]"))
        - "123Hello" -> "123Hello"
            - We can use the $ (dollar sign) to find a WebElement if the value ends with a constant string value
            - driver.findElement.(By.cssSelector("*[id $=’Hello’]"))
        - "123Hello456" -> "789Hello123"
            - We can use the * (asterisk) to find a WebElement if the value contains a constant string value
            - driver.findElement.(By.cssSelector("*[id *=’Hello’]"))
